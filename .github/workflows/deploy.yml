name: 'Deploy'
on:
  push:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        required: true
        default: 'production'

jobs:
  deploy:
    runs-on: 'ubuntu-latest'
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: 'actions/checkout@v2'

      # taken from
      # https://docs.github.com/en/actions/guides/caching-dependencies-to-speed-up-workflows
      # https://docs.cypress.io/guides/continuous-integration/github-actions#Caching-Dependencies-and-Build-Artifacts
      # NextJS build is not cached on purpose â€“ there seems to be issues with Tailwind and purge when adding new classes
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            ~/.cache/Cypress
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Create .env file for development
        run: echo '${{ secrets.ENV_FILE_DEVELOPMENT }}' > .env
        if: ${{ github.event.inputs.environment != 'production' }}

      - name: Create .env file for production
        run: echo '${{ secrets.ENV_FILE_PRODUCTION }}' > .env
        if: ${{ github.event.inputs.environment == 'production' }}

      - name: Create robots.txt file for development
        run: 'echo -e "User-agent: *\nDisallow: /" > public/robots.txt'
        if: ${{ github.event.inputs.environment != 'production' }}

      - name: Build
        run: npm run build

      - name: Add deploy key
        run: |
          mkdir ~/.ssh
          echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Deploy development
        run: |
          set -o allexport
          source .env
          set +o allexport
          cd .ansible
          ansible-playbook -i inventory.dev.yml site.yml
        if: ${{ github.event.inputs.environment != 'production' }}

      - name: Deploy production
        run: |
          set -o allexport
          source .env
          set +o allexport
          cd .ansible
          ansible-playbook -i inventory.prod.yml site.yml
        if: ${{ github.event.inputs.environment == 'production' }}
